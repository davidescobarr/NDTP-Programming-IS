import logging
import json

from sc_client.models import ScAddr, ScLinkContentType, ScTemplate
from sc_client.constants import sc_types
from sc_client.client import template_search, create_elements

from sc_kpm import ScAgentClassic, ScModule, ScResult, ScServer
from sc_kpm.utils import (
    create_link,
    get_link_content_data,
    check_edge, create_edge,
    delete_edges,
    get_system_idtf,
    get_edge
)
from sc_kpm.utils.action_utils import (
    create_action_answer,
    finish_action_with_status,
    get_action_arguments
)
from sc_kpm import ScKeynodes

logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s | %(name)s | %(message)s",
    datefmt="[%d-%b-%y %H:%M:%S]"
)

class AnalyzeHolandTestAgent(ScAgentClassic):
    def __init__(self):
        super().__init__("action_analyze_holand_test_agent")

    def on_event(self, event_element: ScAddr, event_edge: ScAddr, action_element: ScAddr) -> ScResult:
        result = self.run(action_element)
        is_successful = (result == ScResult.OK)
        finish_action_with_status(action_element, is_successful)
        self.logger.info("AnalyzeHolandTestAgent finished %s", "successfully" if is_successful else "unsuccessfully")
        return result

    def run(self, action_node: ScAddr) -> ScResult:
        self.logger.info("AnalyzeHolandTestAgent started")

        # Получаем JSON с ответами (Sc-ссылка)
        json_link = get_action_arguments(action_node, 1)[0]
        json_data = get_link_content_data(json_link)
        if not json_data:
            self.logger.error("No JSON data found")
            return ScResult.ERROR

        try:
            # Ожидается, что JSON – это массив объектов-вопросов, например:
            # [
            #   {
            #       "display_name": "Какая профессия вам больше подходит?",
            #       "answers": [ {"name": "Инженер-технолог", "id": 0},
            #                    {"name": "Инженер-конструктор", "id": 1} ],
            #       "answer": 0
            #   },
            #   ...
            # ]
            questions = json.loads(json_data)
            self.logger.info("Received JSON data: %s", questions)
        except json.JSONDecodeError as e:
            self.logger.error("Failed to parse JSON: %s", str(e))
            return ScResult.ERROR

        if not isinstance(questions, list):
            self.logger.error("JSON data is not a list")
            return ScResult.ERROR

        # Таблица категорий.
        # Для каждой категории указаны идентификаторы вопросов,
        # при которых начисляется балл для данной категории.
        # Суффикс "а" означает, что балл начисляется, если выбран вариант с id=0;
        # суффикс "в" – если выбран вариант с id=1.
        category_definitions = {
            "category1": ["1а", "2а", "3а", "4а", "5а", "16а", "17а", "19а", "21а", "28а", "31а", "32а", "33а", "34а"],
            "category2": ["1в", "6а", "7а", "8а", "9а", "16в", "20а", "22а", "23а", "24а", "31в", "35а", "36а", "37а"],
            "category3": ["2в", "6в", "10а", "11а", "12а", "17в", "20в", "25а", "26а", "27а", "36в", "38а", "39а", "41в"],
            "category4": ["3в", "7в", "10в", "13а", "14а", "18а", "19в", "22в", "29а", "32в", "35в", "38в", "40а", "42а"],
            "category5": ["4в", "8в", "11в", "13в", "15а", "18в", "23в", "25в", "26в", "28в", "30а", "33в", "39в", "40в"],
            "category6": ["5в", "9в", "12в", "14в", "15в", "21в", "24в", "27в", "29в", "30в", "34в", "37в", "41а", "42в"],
        }

        # Инициализируем счетчики баллов для каждой категории
        category_scores = {cat: 0 for cat in category_definitions}

        # Проходим по всем вопросам. Если в JSON не указан явный номер вопроса, используем порядковый номер.
        for i, question in enumerate(questions):
            answer_val = question.get("answer")
            # Формируем эффективный идентификатор:
            # номер вопроса (i+1) + суффикс "а" (если answer == 0) или "в" (если answer == 1)
            question_number = i + 1
            effective_id = f"{question_number}{'а' if answer_val == 0 else 'в'}"
            self.logger.info("Question %s: effective id %s", question_number, effective_id)

            # Для каждого вопроса проверяем, в каких категориях содержится этот идентификатор
            for cat, id_list in category_definitions.items():
                if effective_id in id_list:
                    category_scores[cat] += 1

        # Находим категорию с максимальным количеством баллов
        winning_category = max(category_scores, key=category_scores.get)
        self.logger.info("Winning category: %s", winning_category)

        # Здесь в зависимости от победившей категории записываем разный текст.
        # Вы можете заменить сообщения на свои.
        if winning_category == "category1":
            result_text = '''Ваш результат преобладает в категории 1.
                            <b>Реалистический</b> – предпочитает работать с вещами, а не с
                            людьми. Это несоциальный, эмоционально-стабильный тип. Ориентирован
                            на настоящее, определенное. Занимается конкретными объектами и их
                            использованием (вещи, инструменты, техника). Хорошо
                            приспосабливается к обстановке, пластичен, трудолюбив. В структуре
                            способностей преобладает невербальные, то есть математические. Люди,
                            относящиеся к этому типу, предпочитают выполнять работу, требующую
                            силы, ловкости, подвижности, хорошей координации движений, навыков
                            практической работы. Результаты труда профессионалов этого типа
                            ощутимы и реальны – их руками создан весь окружающий нас предметный
                            мир. Люди реалистического типа охотнее делают, чем говорят, они
                            настойчивы и уверены в себе, в работе предпочитают четкие и конкретные
                            указания. Придерживаются традиционных ценностей, поэтому критически
                            относятся к новым идеям. Предпочитает занятия требующие конкретности,
                            четкости (оператор ПК, техник, шофер, ювелир, автомеханик, фермер
                            инженер и др.).
                            Близкие типы: интеллектуальный и конвенциальный.'''
        elif winning_category == "category2":
            result_text = '''Ваш результат преобладает в категории 2.
                            Интеллектуальный (исследовательский) – ориентирован на труд
                            с идеями и с вещами (объектами). Присуща как пластичность, так и
                            ригидность в действиях. Характеризуется как любознательный,
                            методичный (система в работе), любит работать в одиночку. Отличается
                            целеустремленностью, настойчивостью, терпеливостью. Предпочитает
                            изыскательные профессии (узнать, распознать). Людей, относящихся к
                            этому типу, отличают аналитические способности, рационализм,
                            независимость и оригинальность мышления, умение точно формулировать
                            и излагать свои мысли, решать логические задачи, генерировать новые
                            идеи. Они часто выбирают научную и исследовательскую работу. Им
                            нужна свобода для творчества. Работа способна увлечь их настолько, что
                            стирается грань между рабочим временем и досугом. Мир идей для них
                            может быть важнее, чем общение с людьми. Материальное благополучие
                            для них обычно не на первом месте. Рекомендуемые профессии -
                            метеоролог, научный работник, автор научно - популярных книг и статей,
                            физик, химик, хирург, биолог и др.)
                            Близкие типы: реалистический и артистический.
                            Противоположный тип: предприимчивый.'''
        elif winning_category == "category3":
            result_text = '''Ваш результат преобладает в категории 3.
                            Социальный – ориентирован на общение, взаимодействие с
                            другими людьми. Нуждается в контактах, не терпит уединение.
                            Предпочитает работать с людьми, а не с вещами. Ответственен, терпелив,
                            эмпатичен. Развитые вербальные способности, повышенная
                            приспособляемость «пластичность» к меняющейся обстановке. Профессии
                            (сферы деятельности) – обучение, лечение, обслуживание и т.д. Люди,
                            относящиеся к этому типу, предпочитают профессиональную
                            деятельность, связанную с обучением, воспитанием, лечением,
                            консультированием, обслуживанием. Люди этого типа гуманны,
                            чувствительны, активны, ориентированы на социальные нормы, способны
                            понять эмоциональное состояние другого человека. Для них характерно
                            хорошее речевое развитие, живая мимика, интерес к людям, готовность
                            прийти на помощь. Материальное благополучие для них обычно не на
                            первом месте. Рекомендуемые профессии: учитель, преподаватель,
                            психолог, логопед, священнослужитель, врач, продавец др.)
                            Близкие типы: артистический и предприимчивый.
                            Противоположный тип: реалистический.
                            '''
        elif winning_category == "category4":
            result_text = '''Ваш результат преобладает в категории 4.
                            Конвенциальный – отдает предпочтение четко
                            структурированной деятельности. Выбирает такие цели и задачи, которые
                            четко подтверждаются обществом и обычаями. Связан с традиционными
                            видами деятельности – канцелярскими, конторскими. Подход к чему-либо
                            – практичен, стереотипен, он не оригинален. Характерны консерватизм,
                            ригидность, но обладает хорошими навыками общения, а также
                            моторными навыками. Настойчив, практичен, дисциплинирован,
                            добросовестен. Преобладают невербальные способности, прекрасный
                            исполнитель. Люди этого типа обычно проявляют склонность к работе,
                            связанной с обработкой и систематизацией информации, предоставленной
                            в виде условных знаков, цифр, формул, текстов (ведение документации,
                            установление количественных соотношений между числами и условными
                            знаками). Они отличаются аккуратностью, пунктуальностью,
                            практичностью, ориентированы на социальные нормы, предпочитают
                            четко регламентированную работу. Материальное благополучие для них
                            более значимо, чем для других типов. Склонны к работе, не связанной с
                            широкими контактами и принятием ответственных решений.
                            Рекомендуемые профессии: экономист, кассир в банке, налоговый
                            инспектор, ревизор, оператор ЭВМ, судебный исполнитель, архивариус,
                            бухгалтер, нотариус, библиотекарь и др.
                            Близкие типы: реалистический и предприимчивый.
                            Противоположный тип: артистический.'''
        elif winning_category == "category5":
            result_text = '''Ваш результат преобладает в категории 5.
                            Предприимчивый – выбирает цели и задачи, которые позволяют
                            ему проявить энергию, энтузиазм. Сочетаются импульсивность и
                            холодный расчет. Наделен как вербальными, так и невербальными
                            способностями, обладает интуицией и навыками эффективного
                            межличностного взаимодействия. Интересуется различными сферами
                            жизни и деятельности. Предпочитает работать с людьми и идеями.
                            Самоуверен, тщеславен, склонен к авантюризму. Настойчив в достижении
                            цели, лабилен. Типы темпераментов – холеристический и сангвиник. Люди
                            этого типа находчивы, практичны, быстро ориентируются в сложной
                            обстановке, склонны к самостоятельному принятию решений, социально
                            активны, готовы рисковать, ищут острые ощущения. Любят и умеют
                            общаться. Имеют высокий уровень притязаний. Избегают занятий,
                            требующих усидчивости, большой и длительной концентрации внимания.
                            Для них значимо материальное благополучие. Предпочитают
                            деятельность, требующую энергии, организаторских способностей,
                            связанную с руководством, управлением и влиянием на людей.
                            Рекомендуемые профессии: руководитель, директор, судья, адвокат,
                            брокер, предприниматель, риэлтор и др.
                            Близкие типы: конвенциальный и социальный.
                            Противоположный тип: исследовательский.'''
        elif winning_category == "category6":
            result_text = '''Ваш результат преобладает в категории 6.
                            Артистический – сложный взгляд на жизнь, гибкость и
                            независимость в принятии решений. Часто свойственен фатализм. Очень
                            чувствителен, не социален, оригинален. Имеет богатое воображение,
                            склонности к творческой деятельности, обладает хорошей интуицией,
                            независим, эмоционален. Предпочитает занятия творческого характера.
                            Преобладают вербальные способности. Для этого типа характерны
                            исключительные способности восприятия и моторики, высокая
                            чувствительность всех анализаторов. Имеет высокий жизненный идеал,
                            нетривиален. Люди этого типа оригинальны, независимы в принятии
                            решений, редко ориентируются на социальные нормы и одобрение,
                            обладают необычным взглядом на жизнь, гибкостью мышления,
                            эмоциональной чувствительностью. Отношения с людьми строят, опираясь
                            на свои ощущения, эмоции, воображение, интуицию. Они не выносят
                            жесткой регламентации, предпочитая свободный график работы. Часто
                            выбирают профессии, связанные с литературой, театром, кино, музыкой,
                            изобразительным искусством (писатель, фотограф, музыкант, художник,
                            певец, журналист, архитектор, актер, дизайнер).
                            Близкие типы: интеллектуальный и социальный.
                            Противоположный тип: конвенциальный.'''
        else:
            result_text = "Спасибо за прохождение теста! Ваши ответы учтены."

        # Формируем рекомендации (пример: порог для рекомендации можно изменить)
        threshold = 7  # примерный порог
        recommendations = {}
        for cat, score in category_scores.items():
            if score >= threshold:
                recommendations[cat] = f"Для {cat} рекомендуем обратить внимание на соответствующие направления."
            else:
                recommendations[cat] = f"Для {cat} рекомендаций пока нет."

        # Итоговый результат формируется в виде JSON-объекта
        result_data = {
            "text": result_text,
            "scores": category_scores,
            "recommendations": recommendations
        }
        result_text_json = json.dumps(result_data)

        # Создаём Sc-ссылку с корректным JSON и присоединяем её к действию
        text_link = create_link(result_text_json, ScLinkContentType.STRING)
        create_action_answer(action_node, text_link)

        self.logger.info("Test analysis completed, result sent")
        return ScResult.OK
